server:
  port: 0

spring:
  application:
    name: order-service
  zipkin:
    base-url: http://127.0.0.1:9411
    enabled: true
  sleuth:
    sampler:
      probability: 1.0
  h2:
    console:
      enabled: true
      # h2 DB에 대해서 외부 접속 허용
      settings:
        web-allow-others: true
      path: /h2-console
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb
#    driver-class-name: org.mariadb.jdbc.Driver
#    url: jdbc:mariadb://localhost:3306/mydb
#    username: root
#    password: 11111111
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    generate-ddl: true
    # Bean이 생성되기 전에 ddl 실행
    defer-datasource-initialization: true

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    # 통신할 Eureka Server의 위치를 지정하고 Eureka Server에 이 Eureka Client를 등록
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka
  # Spring Boot가 제공하는 랜덤포트 0 대신에 인스턴스 이름 규칙을 지정
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

logging:
  level:
    com.example.orderservice: DEBUG

# spring boot actuator
management:
  endpoints:
    web:
      exposure:
        include: health, httptrace, info, prometheus, metrics
